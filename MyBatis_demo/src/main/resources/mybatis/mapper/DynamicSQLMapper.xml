<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.mapper.DynamicSQLMapper">


    <!--
    如果标签里有内容（值）
    prefix/suffix：将trim标签中内容前面或后面添加指定内容
    suffixOverrides/prefixOverrides：将trim标签中内容前面或后面去掉指定内容
    如果标签里没有内容时，trim标签也没有任何效果
    -->
    <select id="getEmpByCondition" resultType="Emp">
        select * from t_emp
        <trim prefix="where" suffixOverrides="and|or">
            <if test="empName != null and empName != ''">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age != ''">
                age = #{age} or
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex}and
            </if>
            <if test="email != null and email != ''">
                email = #{email}
            </if>
        </trim>
    </select>
    <!--List<Emp> getEmpByCondition(Emp emp);-->
    <!--
    当where标签中有内容时，会自动生成where关键字，并且将内容前多余的and或者or去掉
    当where标签中没有内容时，此时where标签没有任何效果
    注意：where标签不能将其中内容后and或者or去掉
    -->
    <select id="getEmpByConditionTwo" resultType="Emp">
        select * from t_emp
        <where>
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
        </where>
    </select>
    <select id="getEmpByConditionOne" resultType="Emp">
        select * from t_emp where
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
    </select>



    <!--List<Emp> getEmpByChoose(Emp emp);-->
    <select id="getEmpByChoose" resultType="Emp">
        select * from t_emp
    <where>
        <choose>
            <when test="empName != null and empName != ''">
                emp_name = #{empName}
            </when>
            <when test="age != null and age != ''">
                age = #{age}
            </when>
            <when test="sex != null and sex != ''">
                sex = #{sex}
            </when>
            <when test="email != null and email != ''">
                email = #{email}
            </when>
            <otherwise>
                did = 1
            </otherwise>
        </choose>
    </where>
    </select>



    <!--int deleteMoreByArray(@Param("eids")Integer[] eids);-->
    <!--
    collection:表示要遍历的集合
    item:表示元素
    separator：分隔符
    open：以什么开始   一般来说open和close只会用在in语句里
    close：以什么结束
    -->
    <delete id="deleteMoreByArrayOne">
        delete from t_emp where eid in

            <foreach collection="eids" item="eid" separator="," open="(" close=")">
                #{eid}
            </foreach>

    </delete>

    <delete id="deleteMoreByArray">
        delete from t_emp where
        <foreach collection="eids" item="eid" separator="or">
            eid = #{eid}
        </foreach>
    </delete>


    <!--int insertMoreByList(List<Emp> emps);-->
    <insert id="insertMoreByList">
        insert into t_emp values
            <foreach collection="emps" item="emp" separator=",">
                (null,#{emp.empName},#{emp.age},#{emp.sex},#{emp.email},null)
            </foreach>
    </insert>






    <sql id="empColumns">eid,emp_name,age,sex,email</sql>
    <!--引用sql片段-->
    <!--<include refid="empColumns"></include>-->

</mapper>